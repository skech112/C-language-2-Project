#include <stdio.h>

// Union 정의
union Number {
    int integer;
    float floating;
};

int main() {
    union Number num;

    // Integer 값을 설정
    num.integer = 42;

    // Integer 값 출력
    printf("정수 값: %d\n", num.integer);

    // Float 값을 설정
    num.floating = 3.14;

    // Float 값 출력
    printf("부동 소수점 값: %f\n", num.floating);

    // 주의: union 내의 변수들은 같은 메모리를 공유하기 때문에
    // 하나를 설정하면 다른 하나의 값은 무효화됩니다.
    printf("무효화된 정수 값: %d\n", num.integer);

    return 0;
}
설명:
이 예제에서는 union을 사용하여 int와 float 두 가지 다른 데이터 유형을 저장할 수 있는 Number라는 이름의 구조체를 정의합니다.
main 함수에서 Number 타입의 변수 num을 선언하고 초기화합니다.

먼저, num.integer를 사용하여 정수 값을 설정하고 출력합니다. 
그런 다음 num.floating을 사용하여 부동 소수점 값을 설정하고 출력합니다. 
하지만 주의해야 할 점은, union 내의 변수들은 같은 메모리를 공유하기 때문에 하나를 설정하면 다른 하나의 값은 무효화됩니다.
따라서 정수 값을 설정한 후에 부동 소수점 값을 설정하면 정수 값은 무효화됩니다.

#include <stdio.h>

// Enum 정의
enum Weekday {
    SUNDAY,    // 0
    MONDAY,    // 1
    TUESDAY,   // 2
    WEDNESDAY, // 3
    THURSDAY,  // 4
    FRIDAY,    // 5
    SATURDAY   // 6
};

int main() {
    enum Weekday today = WEDNESDAY;

    switch (today) {
        case SUNDAY:
            printf("오늘은 일요일입니다.\n");
            break;
        case MONDAY:
            printf("오늘은 월요일입니다.\n");
            break;
        case WEDNESDAY:
            printf("오늘은 수요일입니다.\n");
            break;
        default:
            printf("오늘은 다른 요일입니다.\n");
            break;
    }

    return 0;
}
설명:
이 예제에서는 열거형(enum)을 사용하여 요일을 나타내는 Weekday 열거형을 정의합니다.
Weekday 열거형에는 일요일부터 토요일까지의 요일이 정의되어 있습니다.
main 함수에서 today 변수를 선언하고 WEDNESDAY로 초기화합니다.
